[01m[K/home/tayya/path_planning_Astar/path_planning_robot/src/a_star_planner.cpp:[m[K In member function â€˜[01m[Kbool path_planning_robot::AStarPlanner::isValid(int, int) const[m[Kâ€™:
[01m[K/home/tayya/path_planning_Astar/path_planning_robot/src/a_star_planner.cpp:162:15:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<signed char, std::allocator<signed char> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare-Wsign-compare]8;;[m[K]
  162 |     if ([01;35m[Kindex >= map_->data.size()[m[K) {
      |         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/tayya/path_planning_Astar/path_planning_robot/src/occupancy_map_publisher.cpp:[m[K In member function â€˜[01m[Kvoid path_planning_robot::OccupancyMapPublisher::printMapSection(int, int, const string&)[m[Kâ€™:
[01m[K/home/tayya/path_planning_Astar/path_planning_robot/src/occupancy_map_publisher.cpp:137:23:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<signed char, std::allocator<signed char> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare-Wsign-compare]8;;[m[K]
  137 |             if ([01;35m[Kindex < map_msg_.data.size()[m[K) {
      |                 [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
