A* Algoritması:
A* algoritmasında neden Manhattan mesafe heuristiği kullanıldı? Euclidean mesafe yerine bunun avantajı nedir?
Algoritmanın implementasyonunda neden 4-bağlantılı grid kullanıldı? 8-bağlantılı grid'e göre farkları nelerdir?
open_set için neden priority queue kullanıldı ve closed_set için neden unordered_map tercih edildi?

Koordinat Sistemleri:
Grid koordinatları ile dünya koordinatları arasındaki dönüşüm nasıl yapılıyor? Neden hücre merkezine (0.5 offset) göre dönüşüm yapılıyor?
Harita başlangıç noktası (origin) neden haritanın merkezine konumlandırıldı?

Performans ve Optimizasyon:
A* algoritmasında maksimum iterasyon sayısı neden map_width_ * map_height_ * 2 olarak belirlendi?
Labirent boyutu ve çözünürlük seçiminde hangi faktörler göz önünde bulunduruldu?
Hangi fonksiyonların performansı optimize edildi ve neden?
Hangi fonksiyonlar ne işe yarıyor?

Hata Yönetimi ve Debug:
Kodda hangi hata kontrolleri yapılıyor ve neden bu kontroller önemli?
Debug mesajları nasıl kategorize edildi (INFO, WARN, ERROR) ve bu ayrımın amacı nedir?

Nesne Yönelimli Tasarım:
GridNode ve Point yapıları neden ayrı tutuldu? Bu ayrımın avantajları nelerdir?
Node sınıflarında (OccupancyMapPublisher ve AStarPlanner) private ve public üyelerin organizasyonu nasıl yapıldı ve neden?
